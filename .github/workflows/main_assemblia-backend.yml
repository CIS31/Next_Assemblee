name: Build and deploy Node.js app to Azure Web App - assemblia-backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: npm install and build
        run: |
          npm install
          npm run build
        working-directory: sentiment-frontend
        
      - name: Debug - Check if .next exists in Azure deployment
        run: |
          echo "=== BUILD_ID content ==="
          cat release/.next/BUILD_ID || echo "BUILD_ID missing"
          echo "=== Required server files ==="
          head -20 release/.next/required-server-files.json || echo "required-server-files.json missing"
          echo "=== Server directory ==="
          ls -la release/.next/server/ || echo "server directory missing"
          
      - name: Debug - List build contents
        run: |
          echo "=== Contenu du dossier racine ==="
          ls -la sentiment-frontend/
          echo "=== Contenu du dossier .next ==="
          ls -la sentiment-frontend/.next/ || echo "Pas de dossier .next"
          echo "=== Contenu du dossier .next/standalone ==="
          ls -la sentiment-frontend/.next/standalone/ || echo "Pas de dossier standalone"
          echo "=== Contenu du dossier .next/static ==="
          ls -la sentiment-frontend/.next/static/ || echo "Pas de dossier static"
      
      - name: Prepare release folder for standalone deployment
        run: |
          mkdir -p release
          # Copier TOUT le contenu de standalone, y compris les fichiers cachés
          cp -r sentiment-frontend/.next/standalone/. release/
          
          # Vérifier et copier les fichiers statiques
          if [ -d "sentiment-frontend/.next/static" ]; then
            mkdir -p release/.next/static
            cp -r sentiment-frontend/.next/static/* release/.next/static/
          fi
          
          # Copier le dossier public
          if [ -d "sentiment-frontend/public" ] && [ ! -d "release/public" ]; then
            cp -r sentiment-frontend/public release/
          fi
          
      - name: Debug - Verify release structure DETAILED
        run: |
          echo "=== Structure complète du dossier release ==="
          find release -type f -name "*.js" | head -10
          echo "=== Vérification server.js ==="
          ls -la release/server.js || echo " server.js manquant"
          echo "=== Vérification .next ==="
          ls -la release/.next/ || echo " .next manquant"
          echo "=== Vérification .next/static ==="
          ls -la release/.next/static/ || echo " .next/static manquant"
          echo "=== Vérification public ==="
          ls -la release/public/ || echo " public manquant"
          
      - name: Debug - Verify release structure
        run: |
          echo "=== Structure du dossier release ==="
          ls -la release/
          echo "=== Contenu de release/.next ==="
          ls -la release/.next/ || echo "Pas de dossier .next dans release"
          echo "=== Vérification du fichier server.js ==="
          ls -la release/server.js || echo "Pas de server.js"
      
      - name: Debug - Verify critical files
        run: |
          echo "=== Verification des fichiers critiques ==="
          ls -la release/.next/BUILD_ID && echo "✅ BUILD_ID présent" || echo "❌ BUILD_ID manquant"
          ls -la release/.next/required-server-files.json && echo "✅ required-server-files.json présent" || echo "❌ required-server-files.json manquant"
          ls -la release/.next/server/ && echo "✅ server/ présent" || echo "❌ server/ manquant"
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: node-app
          
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'assemblia-backend'
          slot-name: 'Production'
          package: node-app/
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AC1767BB6D594B1B83E89216B78C0DC8 }}
